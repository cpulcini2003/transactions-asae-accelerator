accelerator:
  displayName: Transactions Accelerator
  description: Transactions Spring Restful API supported by in memory H2 or persistent PostgreSQL database.
  iconUrl: https://blogs.vmware.com/wp-content/uploads/2022/02/tap.png
  tags:
    - Spring
    - Transactions
    - MoneyApp
    - PostgreSQL
    - H2
    - CPu

  # Place this after the 'tags' section from the previous step
  options:
    - name: artifactId
      inputType: text
      defaultValue: "transactions-profile"
      label: Module artifact name
      required: true

    # CONFIG SERVICE SECTION
    - name: enableAppConfigService
      description: "If set to true, application will be configured to use Application Configuration Service for external configuration"
      label: Enable Application Configuration Service?
      dataType: boolean
      defaultValue: false
      inputType: checkbox
      required: true
    - name: acsRepoUri
      description: "Git Repository URI containing external configuration"
      inputType: text
      label: Git Repository URI
      required: true
      defaultValue: "https://git-server/app-config-repo"
      dependsOn:
        name: enableAppConfigService
    - name: acsRepoLabel
      description: "Git Repository Branch name containing external configuration"
      label: Git Repository Label
      datatype: text
      defaultValue: main
      required: true
      dependsOn:
        name: enableAppConfigService
    - name: acsRepoPattern
      description: "Pattern used to search in Git repositories. For each pattern, use format like {application} or {application}/{profile} instead of {application}-{profile}.yml, and separate them by a comma."
      label: Application Configuration Pattern
      datatype: text
      defaultValue: "application/default"
      required: true
      dependsOn:
        name: enableAppConfigService
    # END CONFIG SERVICE SECTION

# Place this after the `options` section from the previous step
engine:
  let:
    - name: workloadResourceName
      expression: '#artifactId.toLowerCase()'
  chain:
  # Test if CONFIG SERVER whas selected 
  - condition: "!#enableAppConfigService"
    merge:
    - include: ['**']
      exclude: ['README.md', 'src/main/resources/application.properties', 'pom.xml']
    - include: ['README.md']
      chain:
        - type: ReplaceText
          substitutions:
            - text: "app-name"
              with: "#workloadResourceName"
    - include: ['src/main/resources/application.properties']
      chain:
        - type: ReplaceText
          substitutions:
            - text: "##spring.application.name:"
              with: "'spring.application.name: ' + #workloadResourceName"
            - text: "##DB_PARAMS"
              with:  |
                'spring.datasource.url=jdbc:h2:mem:testdb
                spring.datasource.driverClassName=org.h2.Driver
                spring.datasource.username=sa
                spring.datasource.password=password
                spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
                spring.h2.console.enabled=true'
    - include: [ "pom.xml" ]
      chain:
        - type: ReplaceText
          regex:
            pattern: "(?<startOfDependencies><dependencies>)(?<existingDependencies>(?![\\s\\S]+<groupId>org.postgresql</groupId>\\s*<artifactId>postgresql</artifactId>[\\s\\S]+</dependencies>))"
            with: |
              '${startOfDependencies}
                  <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <scope>runtime</scope>
                  </dependency>${existingDependencies}'
  - condition: "#enableAppConfigService == true"
    merge:
    - include: ['**']
      exclude: ['README.md', 'src/main/resources/application.properties', 'config.yaml']
    - include: ['README.md']
      chain:
        - type: ReplaceText
          substitutions:
            - text: "app-name"
              with: "#workloadResourceName"
    - include: ['src/main/resources/application.properties']
      chain:
        - type: ReplaceText
          substitutions:
            - text: "##spring.application.name:"
              with: "'spring.application.name: ' + #workloadResourceName"
    - include: ["config.yaml"]
      chain:
        - type: ReplaceText
          substitutions:
            - text: "##DB_PARAMS"
              with:  |
                'datasource:
                  url: jdbc:h2:mem:testdb
                  driverClassName: org.h2.Driver
                  username: sa
                  password: password
                jpa:
                  database-platform: org.hibernate.dialect.H2Dialect
                h2:
                  console:
                    enabled: true'
        - type: RewritePath
          regex: (.*)config.yaml(.*)
          rewriteTo: "#workloadResourceName + '.yaml'"
    - include: [ "pom.xml" ]
      chain:
        - type: ReplaceText
          regex:
            pattern: "(?<startOfDependencies><dependencies>)(?<existingDependencies>(?![\\s\\S]+<groupId>org.postgresql</groupId>\\s*<artifactId>postgresql</artifactId>[\\s\\S]+</dependencies>))"
            with: |
              '${startOfDependencies}
                  <dependency>
                    <groupId>com.h2database</groupId>
                    <artifactId>h2</artifactId>
                    <scope>runtime</scope>
                  </dependency>${existingDependencies}'